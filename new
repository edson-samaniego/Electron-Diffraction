import pygame
import sys

# Inicializa Pygame
pygame.init()
ancho, alto = 800, 600
pantalla = pygame.display.set_mode((ancho, alto))
pygame.display.set_caption("Movimiento automático del guerrero")
reloj = pygame.time.Clock()

# Colores
NEGRO = (0, 0, 0)
ROJO = (200, 0, 0)

# Clase base
class Personaje:
    def __init__(self, nombre, vida, ataque, x, y):
        self.nombre = nombre
        self.vida = vida
        self.ataque = ataque
        self.x = x
        self.y = y
        self.velocidad = 5

    def caminar(self, dx, dy):
        self.x += dx * self.velocidad
        self.y += dy * self.velocidad

    def atacar(self):
        print(f"{self.nombre} ataca con {self.ataque} de poder!")

# Subclase
class Guerrero(Personaje):
    def __init__(self, nombre, vida, ataque, x, y, armadura):
        super().__init__(nombre, vida, ataque, x, y)
        self.armadura = armadura

    def dibujar(self, superficie):
        pygame.draw.rect(superficie, ROJO, (self.x, self.y, 40, 60))

# Crear objeto guerrero
guerrero = Guerrero("Axel", 100, 25, 100, 100, 50)

# Control del movimiento automático
pasos_derecha = 10
pasos_abajo = 5

# Bucle principal
while True:
    pantalla.fill(NEGRO)

    for evento in pygame.event.get():
        if evento.type == pygame.QUIT:
            pygame.quit()
            sys.exit()

    # Movimiento automático por pasos
    if pasos_derecha > 0:
        guerrero.caminar(1, 0)  # derecha
        pasos_derecha -= 1
    elif pasos_abajo > 0:
        guerrero.caminar(0, 1)  # abajo
        pasos_abajo -= 1
    else:
        pass  # ya no se mueve

    guerrero.dibujar(pantalla)

    pygame.display.flip()
    reloj.tick(60)

import numpy as np

t = np.linspace(0, 2 * np.pi, 1000)

# Coordenadas paramétricas del corazón
x = 16 * np.sin(t)**3
y = 13 * np.cos(t) - 5 * np.cos(2*t) - 2 * np.cos(3*t) - np.cos(4*t)
